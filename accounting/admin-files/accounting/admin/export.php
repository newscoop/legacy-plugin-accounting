<?php
/**
 * @author Mischa Gorinskat <mischa.gorinskat@sourcefabric.org>
 * @copyright 2014 Sourcefabric o.p.s.
 * @license http://www.gnu.org/licenses/gpl.txt
 * @link http://www.sourcefabric.org
 */

require_once($GLOBALS['g_campsiteDir'].'/classes/SystemPref.php');
require_once WWW_DIR . '/library/Newscoop/Version.php';
require_once WWW_DIR . '/plugins/accounting/admin-files/libs/ArticleListExtended/ArticleListExtended.php';
require_once WWW_DIR . '/plugins/accounting/external/Classes/PHPExcel.php';

$printAuthor = '';
$printStartDate = '';
$printEndDate = '';

// Convert parameters to expected format
if (isset($_POST['export_data'])) {
    $_REQUEST['args'] = json_decode($_POST['export_data'], true);

    foreach ($_REQUEST['args'] as &$data) {

        switch($data['name']) {
            case 'iDisplayLength':
                $data['value'] = '10000';
            break;
            case 'author';
                $printAuthor = $data['value'];
            break;
            case 'publish_date_from';
                $printStartDate = $data['value'];
            break;
            case 'publish_date_to';
                $printEndDate = $data['value'];
            break;
        }

    }
}

// set up
$articlelist = new ArticleListExtended();
$jsonData = $articlelist->doData($filters);

// Create new PHPExcel object
$objPHPExcel = new PHPExcel();

$newscoopString = sprintf('Newscoop %s', \Newscoop\Version::VERSION);
$documentTitle = 'Accounting data';
if (!empty($printAuthor)) {
    $documentTitle .= ' for '.$printAuthor;
}
if (!empty($printStartDate)) {
    $documentTitle .= ' from '.$printStartDate;
}
if (!empty($printEndDate)) {
    $documentTitle .= ' till '.$printEndDate;
}

$objPHPExcel
    ->getProperties()
        ->setCreator($newscoopString)
        ->setLastModifiedBy($newscoopString)
        ->setTitle($documentTitle)
        ->setDescription(sprintf('Accounting informatiion generated by %s', $newscoopString));
$objPHPExcel->getActiveSheet()->setTitle('Accounting data');

$articles = $jsonData['aaData'];
$columns = $articlelist->getCols(false);

$iRow = 1;
$sColumn = 'a';

foreach ($columns AS $column) {

    $cell = sprintf('%s%s', $sColumn, $iRow);
    $objPHPExcel->setActiveSheetIndex(0)->setCellValue($cell, html_entity_decode(strip_tags($column)));
    $sColumn++;
}
$iRow++;

foreach ($articles as $article) {

    $sColumn = 'a';

    foreach ($article as $fields) {
        $cell = sprintf('%s%s', $sColumn, $iRow);
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue($cell, strip_tags($fields));
        $sColumn++;
    }

    $iRow++;
}

// Set active sheet index to the first sheet, so Excel opens this as the first sheet
$objPHPExcel->setActiveSheetIndex(0);

// Redirect output to a clientâ€™s web browser (Excel5)
header('Content-Type: application/vnd.ms-excel');
header('Content-Disposition: attachment;filename="01simple.xls"');
header('Cache-Control: max-age=0');
// If you're serving to IE 9, then the following may be needed
header('Cache-Control: max-age=1');

// If you're serving to IE over SSL, then the following may be needed
header ('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past
header ('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT'); // always modified
header ('Cache-Control: cache, must-revalidate'); // HTTP/1.1
header ('Pragma: public'); // HTTP/1.0

$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
$objWriter->save('php://output');
exit;
